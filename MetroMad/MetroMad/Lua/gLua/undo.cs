//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// /*  AutoGeneratedCode.cs - This class Is autogenerated.
//
//    Copyright (C) 2014  Ali Deym (https://github.com/111WARLOCK111/).
//
//    This program is free software; you can redistribute it and/or modify
//    it under the terms of the GNU General Public License as published by
//    the Free Software Foundation; either version 2 of the License, or
//    (at your option) any later version.
//
//    This program is distributed in the hope that it will be useful,
//    but WITHOUT ANY WARRANTY; without even the implied warranty of
//    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//    GNU General Public License for more details.
//
//    You should have received a copy of the GNU General Public License along
//    with this program; if not, write to the Free Software Foundation, Inc.,
//    51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
//*/
namespace MetroMad.Lua.gLua {
    using System;
    
    
    public class undo {
        
        // <realm>Server</realm>
        // <summary>Adds an entity to the current undo block</summary>
        // <param name="ent">The entity to add.</param>
        public virtual void AddEntity(Entity ent) {
        }
        
        // <realm>Server</realm>
        // <summary>Adds a function to call when the current undo block is undone</summary>
        // <param name="func">The function to call.</param>
        // <param name="arg2,params object[]">Arguments to pass to the function (after the undo info table).</param>
        public virtual void AddFunction(function func, any arg2,params object[]) {
        }
        
        // <realm>Server</realm>
        // <summary>Begins a new undo entry</summary>
        // <param name="name">Name of the undo message to show to players.</param>
        public virtual void Create(string name) {
        }
        
        // <realm>Server</realm>
        // <summary>Processes an undo block (in table form). This is used internally by the undo manager when a player presses Z.</summary>
        // <param name="tab">The undo block to process as an {{Struct|Undo}}.</param>
        // <return>number|Number of removed entities</return>
        public virtual int Do_Undo(table tab) {
            return 1;
        }
        
        // <realm>Shared</realm>
        // <summary>Completes an undo entry, and registers it with the player's client</summary>
        public virtual void Finish() {
        }
        
        // <realm>Shared</realm>
        // <summary>Returns a table containing all undo blocks</summary>
        // <return>table|ret</return>
        public virtual table GetTable() {
            return new table();
        }
        
        // <realm>Client</realm>
        // <summary>{{Internal}}</summary>
        public virtual void MakeUIDirty() {
        }
        
        // <realm>Server</realm>
        // <summary>Replaces any instance of the "from" reference with the "to" reference, in any existing undo block. Returns true if something was replaced</summary>
        // <param name="from">The old entity.</param>
        // <param name="to">The new entity to replace the old one.</param>
        // <return>boolean|somethingReplaced</return>
        public virtual bool ReplaceEntity(Entity from, Entity to) {
            return true;
        }
        
        // <realm>Server</realm>
        // <summary>Sets a custom undo text for the current undo block</summary>
        // <param name="customText">The text to display when the undo block is undone.</param>
        public virtual void SetCustomUndoText(string customText) {
        }
        
        // <realm>Server</realm>
        // <summary>Sets the player which the current undo block belongs to</summary>
        // <param name="ply">The player responsible for undoing the block.</param>
        public virtual void SetPlayer(Player ply) {
        }
        
        // <realm>Client</realm>
        // <summary>{{Internal}}</summary>
        public virtual void SetupUI() {
        }
    }
}
