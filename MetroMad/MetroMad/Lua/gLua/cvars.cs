//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// /*  AutoGeneratedCode.cs - This class Is autogenerated.
//
//    Copyright (C) 2014  Ali Deym (https://github.com/111WARLOCK111/).
//
//    This program is free software; you can redistribute it and/or modify
//    it under the terms of the GNU General Public License as published by
//    the Free Software Foundation; either version 2 of the License, or
//    (at your option) any later version.
//
//    This program is distributed in the hope that it will be useful,
//    but WITHOUT ANY WARRANTY; without even the implied warranty of
//    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//    GNU General Public License for more details.
//
//    You should have received a copy of the GNU General Public License along
//    with this program; if not, write to the Free Software Foundation, Inc.,
//    51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
//*/
namespace MetroMad.Lua.gLua {
    using System;
    
    
    public class cvars {
        
        // <realm>Shared</realm>
        // <summary>Adds a callback to be called when the named convar changes.</summary>
        // <param name="name">The name of the convar to add the change callback to.</param>
        // <param name="callback">The function to be called when the convar changes.</param>
        // <param name="indentifier">If set, you will be able to remove the callback using {{LibraryFunction|cvars|RemoveChangeCallback}}.</param>
        public static void AddChangeCallback(string name, function callback, string indentifier) {
        }
        
        // <realm>Shared</realm>
        // <summary>Retrieves console variable as a boolean.</summary>
        // <param name="cvar">Name of console variable.</param>
        public static void Bool(string cvar) {
        }
        
        // <realm>Shared</realm>
        // <summary>Returns a table with the convars callbacks.</summary>
        // <param name="name">The name of the convar.</param>
        // <param name="CreateIfNotFound">If a convar is not found, should it be created.</param>
        public static void GetConVarCallbacks(string name, boolean CreateIfNotFound) {
        }
        
        // <realm>Shared</realm>
        // <summary>Retrieves console variable as a number.</summary>
        // <param name="cvar">Name of console variable.</param>
        public static void Number(string cvar) {
        }
        
        // <realm>Shared</realm>
        // <summary>{{Internal}}</summary>
        // <param name="name">Convar name.</param>
        // <param name="oldVal">The old value of the convar.</param>
        // <param name="newVal">The new value of the convar.</param>
        public static void OnConVarChanged(string name, string oldVal, string newVal) {
        }
        
        // <realm>Shared</realm>
        // <summary>Removes a callback for given convar with given identifier.</summary>
        // <param name="name">The name of the convar to add the change callback to.</param>
        // <param name="indentifier">The convar identifier.</param>
        public static void AddChangeCallback(string name, string indentifier) {
        }
        
        // <realm>Shared</realm>
        // <summary>Retrieves console variable as a string.</summary>
        // <param name="cvar">Name of console variable.</param>
        public static void String(string cvar) {
        }
    }
}
