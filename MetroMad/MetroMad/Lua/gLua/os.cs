//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// /*  AutoGeneratedCode.cs - This class Is autogenerated.
//
//    Copyright (C) 2014  Ali Deym (https://github.com/111WARLOCK111/).
//
//    This program is free software; you can redistribute it and/or modify
//    it under the terms of the GNU General Public License as published by
//    the Free Software Foundation; either version 2 of the License, or
//    (at your option) any later version.
//
//    This program is distributed in the hope that it will be useful,
//    but WITHOUT ANY WARRANTY; without even the implied warranty of
//    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//    GNU General Public License for more details.
//
//    You should have received a copy of the GNU General Public License along
//    with this program; if not, write to the Free Software Foundation, Inc.,
//    51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
//*/
namespace MetroMad.Lua.gLua {
    using System;
    
    
    public class os {
        
        // <realm>Shared</realm>
        // <summary>Returns the approximate cpu time the application ran.</summary>
        // <return>number|runtime</return>
        public virtual int clock() {
            return 1;
        }
        
        // <realm>Shared</realm>
        // <summary>Returns the date/time as a formatted string or in a table.</summary>
        // <param name="format">The format string.</param>
        // <param name="time">Time to use for the format.</param>
        // <return>string|Formatted date<br/></return>
        public virtual string date(string format, float time) {
            return "String";
        }
        
        // <realm>Shared</realm>
        // <summary>Subtracts the second of the first value and rounds the result.</summary>
        // <param name="timeA">The first value.</param>
        // <param name="timeB">The value to subtract.</param>
        // <return>number|diffTime</return>
        public virtual int difftime(float timeA, float timeB) {
            return 1;
        }
        
        // <realm>Shared</realm>
        // <summary>Returns the system time in seconds past the unix epoch. If a table is supplied, the function attempts to build a system time with the specified table members.</summary>
        // <param name="dateData">Table to generate the time from. This table's data is interpreted as being in the local timezone. See {{Struct|DateData}}.</param>
        // <return>number|Seconds passed since Unix epoch</return>
        public virtual int time(table dateData) {
            return 1;
        }
    }
}
