//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// /*  AutoGeneratedCode.cs - This class Is autogenerated.
//
//    Copyright (C) 2014  Ali Deym (https://github.com/111WARLOCK111/).
//
//    This program is free software; you can redistribute it and/or modify
//    it under the terms of the GNU General Public License as published by
//    the Free Software Foundation; either version 2 of the License, or
//    (at your option) any later version.
//
//    This program is distributed in the hope that it will be useful,
//    but WITHOUT ANY WARRANTY; without even the implied warranty of
//    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//    GNU General Public License for more details.
//
//    You should have received a copy of the GNU General Public License along
//    with this program; if not, write to the Free Software Foundation, Inc.,
//    51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
//*/
namespace MetroMad.Lua.gLua {
    using System;
    
    
    public class IRestore {
        
        // <realm>Shared</realm>
        // <summary>Ends current data block started with {{ClassFunction|IRestore|StartBlock}} and returns to the parent block.</summary>
        public virtual void EndBlock() {
        }
        
        // <realm>Shared</realm>
        // <summary>Reads next bytes from the restore object as an {{Type|Angle}}.</summary>
        // <return>Angle|The angle that has been read</return>
        public virtual Angle ReadAngle() {
            return new Angle();
        }
        
        // <realm>Shared</realm>
        // <summary>Reads next bytes from the restore object as a {{Type|boolean}}.</summary>
        // <return>boolean|The boolean that has been read</return>
        public virtual bool ReadBool() {
            return true;
        }
        
        // <realm>Shared</realm>
        // <summary>Reads next bytes from the restore object as an {{Type|Entity}}.</summary>
        // <return>Entity|The entity that has been read.</return>
        public virtual Entity ReadEntity() {
            return new Entity();
        }
        
        // <realm>Shared</realm>
        // <summary>Reads next bytes from the restore object as a floating point {{Type|number}}.</summary>
        // <return>number|The read floating point number.</return>
        public virtual int ReadFloat() {
            return 1;
        }
        
        // <realm>Shared</realm>
        // <summary>Reads next bytes from the restore object as an integer {{Type|number}}.</summary>
        // <return>number|The read integer number.</return>
        public virtual int ReadInt() {
            return 1;
        }
        
        // <realm>Shared</realm>
        // <summary>Reads next bytes from the restore object as a {{Type|string}}.</summary>
        // <return>string|The read string. Maximum length is 1024.</return>
        public virtual string ReadString() {
            return "String";
        }
        
        // <realm>Shared</realm>
        // <summary>Reads next bytes from the restore object as a {{Type|Vector}}.</summary>
        // <return>Vector|The read vector.</return>
        public virtual Vector ReadVector() {
            return new Vector();
        }
        
        // <realm>Shared</realm>
        // <summary>Loads next block of data to be read inside current block. Blocks '''must''' be ended with {{ClassFunction|IRestore|EndBlock}}.</summary>
        // <return>string|The name of the next data block to be read.</return>
        public virtual string StartBlock() {
            return "String";
        }
    }
}
