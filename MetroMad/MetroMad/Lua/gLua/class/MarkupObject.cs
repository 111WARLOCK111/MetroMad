//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// /*  AutoGeneratedCode.cs - This class Is autogenerated.
//
//    Copyright (C) 2014  Ali Deym (https://github.com/111WARLOCK111/).
//
//    This program is free software; you can redistribute it and/or modify
//    it under the terms of the GNU General Public License as published by
//    the Free Software Foundation; either version 2 of the License, or
//    (at your option) any later version.
//
//    This program is distributed in the hope that it will be useful,
//    but WITHOUT ANY WARRANTY; without even the implied warranty of
//    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//    GNU General Public License for more details.
//
//    You should have received a copy of the GNU General Public License along
//    with this program; if not, write to the Free Software Foundation, Inc.,
//    51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
//*/
namespace MetroMad.Lua.gLua {
    using System;
    
    
    public class MarkupObject {
        
        // <realm>Client</realm>
        // <summary>{{Internal}}</summary>
        // <return>MarkupObject|The created object.</return>
        public virtual MarkupObject Create() {
            return new MarkupObject();
        }
        
        // <realm>Client</realm>
        // <summary>Draws the computed markupobject to the screen.</summary>
        // <param name="xOffset">The X coordinate on the screen.</param>
        // <param name="yOffset">The Y coordinate on the screen.</param>
        // <param name="xAlign">The alignment of the x coordinate using {{Enum|TEXT}}.</param>
        // <param name="yAlign">The alignment of the y coordinate using {{Enum|TEXT}}.</param>
        // <param name="alphaoverride">Sets the alpha of all drawn objects to this.</param>
        public virtual void Draw(float xOffset, float yOffset, float xAlign, float yAlign, float alphaoverride) {
        }
        
        // <realm>Client</realm>
        // <summary>Gets computed the height of the markupobject.</summary>
        // <return>number|The computed height.</return>
        public virtual int GetHeight() {
            return 1;
        }
        
        // <realm>Client</realm>
        // <summary>Gets computed the width of the markupobject.</summary>
        // <return>number|The computed width.</return>
        public virtual int GetWidth() {
            return 1;
        }
        
        // <realm>Client</realm>
        // <summary>Gets computed the width and height of the markupobject.</summary>
        // <return>number|The computed width.</return>
        public virtual int Size() {
            return 1;
        }
    }
}
