//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// /*  AutoGeneratedCode.cs - This class Is autogenerated.
//
//    Copyright (C) 2014  Ali Deym (https://github.com/111WARLOCK111/).
//
//    This program is free software; you can redistribute it and/or modify
//    it under the terms of the GNU General Public License as published by
//    the Free Software Foundation; either version 2 of the License, or
//    (at your option) any later version.
//
//    This program is distributed in the hope that it will be useful,
//    but WITHOUT ANY WARRANTY; without even the implied warranty of
//    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//    GNU General Public License for more details.
//
//    You should have received a copy of the GNU General Public License along
//    with this program; if not, write to the Free Software Foundation, Inc.,
//    51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
//*/
namespace MetroMad.Lua.gLua {
    using System;
    
    
    public class ITexture {
        
        // <realm>Shared</realm>
        // <summary>Invokes the generator of the texture.</summary>
        public virtual void Download() {
        }
        
        // <realm>Shared</realm>
        // <summary>Returns the color of the specified pixel, only works for textures created from PNG files.</summary>
        // <param name="x">The X coordinate.</param>
        // <param name="y">The Y coordinate.</param>
        // <return>table|The color of the pixel as a {{Struct|Color}}.</return>
        public virtual table GetColor(float x, float y) {
            return new table();
        }
        
        // <realm>Shared</realm>
        // <summary>Returns the true unmodified height of the texture.</summary>
        // <return>number|height</return>
        public virtual int GetMappingHeight() {
            return 1;
        }
        
        // <realm>Shared</realm>
        // <summary>Returns the true unmodified width of the texture.</summary>
        // <return>number|width</return>
        public virtual int GetMappingWidth() {
            return 1;
        }
        
        // <realm>Shared</realm>
        // <summary>Returns the name of the texture, in most cases the path.</summary>
        // <return>string|name</return>
        public virtual string GetName() {
            return "String";
        }
        
        // <realm>Shared</realm>
        // <summary>Returns the modified height of the texture, this value may be affected by mipmapping and other factors.</summary>
        // <return>number|height</return>
        public virtual int Height() {
            return 1;
        }
        
        // <realm>Shared</realm>
        // <summary>Returns whenever the texture is invalid or not.</summary>
        // <return>boolean|isError</return>
        public virtual bool IsError() {
            return true;
        }
        
        // <realm>Shared</realm>
        // <summary>Returns the modified width of the texture, this value may be affected by mipmapping and other factors.</summary>
        // <return>number|width</return>
        public virtual int Width() {
            return 1;
        }
    }
}
