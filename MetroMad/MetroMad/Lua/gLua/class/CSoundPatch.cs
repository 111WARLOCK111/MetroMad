//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// /*  AutoGeneratedCode.cs - This class Is autogenerated.
//
//    Copyright (C) 2014  Ali Deym (https://github.com/111WARLOCK111/).
//
//    This program is free software; you can redistribute it and/or modify
//    it under the terms of the GNU General Public License as published by
//    the Free Software Foundation; either version 2 of the License, or
//    (at your option) any later version.
//
//    This program is distributed in the hope that it will be useful,
//    but WITHOUT ANY WARRANTY; without even the implied warranty of
//    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//    GNU General Public License for more details.
//
//    You should have received a copy of the GNU General Public License along
//    with this program; if not, write to the Free Software Foundation, Inc.,
//    51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
//*/
namespace MetroMad.Lua.gLua {
    using System;
    
    
    public class CSoundPatch {
        
        // <realm>Shared</realm>
        // <summary>Adjust the pitch, alias the speed at which the sound is being played.</summary>
        // <param name="pitch">The pitch can range from 0-255.</param>
        // <param name="deltaTime">The time to fade from previous to the new pitch.</param>
        public virtual void ChangePitch(float pitch, float deltaTime) {
        }
        
        // <realm>Shared</realm>
        // <summary>Adjusts the volume of the sound played.<br></summary>
        // <param name="volume">The volume ranges from 0 to 1.</param>
        // <param name="deltaTime">Time to fade the volume from previous to new value from.</param>
        public virtual void ChangeVolume(float volume, float deltaTime) {
        }
        
        // <realm>Shared</realm>
        // <summary>Fades out the volume of the sound from the current volume to 0 in the given amount of seconds.</summary>
        // <param name="seconds">Fade time.</param>
        public virtual void FadeOut(float seconds) {
        }
        
        // <realm>Shared</realm>
        // <summary>Returns the DSP ( Digital Signal Processor ) effect for the sound.</summary>
        // <return>number|The DSP effects of the sound</return>
        public virtual int GetDSP() {
            return 1;
        }
        
        // <realm>Shared</realm>
        // <summary>Returns whenever the sound is being played.</summary>
        // <return>boolean|Is playing or not</return>
        public virtual bool IsPlaying() {
            return true;
        }
        
        // <realm>Shared</realm>
        // <summary>Starts to play the sound.</summary>
        public virtual void Play() {
        }
        
        // <realm>Shared</realm>
        // <summary>Same as {{ClassFunction|CSoundPatch|Play}} but with 2 extra arguments allowing to set volume and pitch directly.</summary>
        // <param name="volume">The volume ranges from 0 to 1.</param>
        // <param name="pitch">The pitch can range from 0-255.</param>
        public virtual void PlayEx(float volume, float pitch) {
        }
        
        // <realm>Shared</realm>
        // <summary>Sets the DSP ( Digital Signal Processor ) effect for the sound. Similar to {{ClassFunction|Player|SetDSP}}</summary>
        // <param name="dsp">The DSP effect to set.</param>
        public virtual void SetDSP(float dsp) {
        }
        
        // <realm>Shared</realm>
        // <summary>Sets the sound level in decibel.</summary>
        // <param name="level">The sound level.<br>.</param>
        // <return>string|data</return>
        public virtual string SetSoundLevel(float level) {
            return "String";
        }
        
        // <realm>Shared</realm>
        // <summary>Stops the sound from being played.</summary>
        public virtual void Stop() {
        }
    }
}
