//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// /*  AutoGeneratedCode.cs - This class Is autogenerated.
//
//    Copyright (C) 2014  Ali Deym (https://github.com/111WARLOCK111/).
//
//    This program is free software; you can redistribute it and/or modify
//    it under the terms of the GNU General Public License as published by
//    the Free Software Foundation; either version 2 of the License, or
//    (at your option) any later version.
//
//    This program is distributed in the hope that it will be useful,
//    but WITHOUT ANY WARRANTY; without even the implied warranty of
//    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//    GNU General Public License for more details.
//
//    You should have received a copy of the GNU General Public License along
//    with this program; if not, write to the Free Software Foundation, Inc.,
//    51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
//*/
namespace MetroMad.Lua.gLua {
    using System;
    
    
    public class Vehicle {
        
        // <realm>Shared</realm>
        // <summary>Returns third person camera distance.</summary>
        // <return>number|Camera distance</return>
        public virtual int GetCameraDistance() {
            return 1;
        }
        
        // <realm>Server</realm>
        // <summary>Gets the driver of the vehicle, returns NULL if no drivers is present.</summary>
        // <return>Entity|The driver of the vehicle</return>
        public virtual Entity GetDriver() {
            return new Entity();
        }
        
        // <realm>Server</realm>
        // <summary>Gets the passenger of the vehicle, returns NULL if no drivers is present.</summary>
        // <param name="passenger">The index of the passenger.</param>
        // <return>Entity|The passenger</return>
        public virtual Entity GetPassenger(float passenger) {
            return new Entity();
        }
        
        // <realm>Shared</realm>
        // <summary>Returns if vehicle has thirdperson mode enabled or not.</summary>
        // <return>boolean|Returns true if third person mode enabled, false otherwise</return>
        public virtual bool GetThirdPersonMode() {
            return true;
        }
        
        // <realm>Shared</realm>
        // <summary>Always returns true, as this overrides {{ClassFunction|Entity|IsVehicle}}.</summary>
        // <return>boolean|true</return>
        public virtual bool IsVehicle() {
            return true;
        }
        
        // <realm>Shared</realm>
        // <summary>Sets the third person camera distance of the vehicle.</summary>
        // <param name="distance">Camera distance to set to.</param>
        public virtual void SetCameraDistance(float distance) {
        }
        
        // <realm>Shared</realm>
        // <summary>Sets the third person mode state.</summary>
        // <param name="enable">Enable or disable the third person mode for this vehicle.</param>
        public virtual void SetThirdPersonMode(boolean enable) {
        }
        
        // <realm>Server</realm>
        // <summary>Sets the animation which the camera follows when entering this vehicle.</summary>
        // <param name="animName">The name of the entry animation.</param>
        public virtual void SetVehicleEntryAnim(string animName) {
        }
    }
}
