//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// /*  AutoGeneratedCode.cs - This class Is autogenerated.
//
//    Copyright (C) 2014  Ali Deym (https://github.com/111WARLOCK111/).
//
//    This program is free software; you can redistribute it and/or modify
//    it under the terms of the GNU General Public License as published by
//    the Free Software Foundation; either version 2 of the License, or
//    (at your option) any later version.
//
//    This program is distributed in the hope that it will be useful,
//    but WITHOUT ANY WARRANTY; without even the implied warranty of
//    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//    GNU General Public License for more details.
//
//    You should have received a copy of the GNU General Public License along
//    with this program; if not, write to the Free Software Foundation, Inc.,
//    51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
//*/
namespace MetroMad.Lua.gLua {
    using System;
    
    
    public class sound {
        
        // <realm>Shared</realm>
        // <summary>Creates a sound script. It can also override sounds, which seems to only work when set on the server.</summary>
        // <param name="soundData">The sounds properties. See {{Struct|SoundData}}.</param>
        public static void Add(table soundData) {
        }
        
        // <realm>Shared</realm>
        // <summary>Overrides sounds defined inside of a txt file; typically used for adding map-specific sounds.</summary>
        // <param name="filepath">Path to the script file to load.</param>
        public static void AddSoundOverrides(string filepath) {
        }
        
        // <realm>Client</realm>
        // <summary>Creates a sound from a function.</summary>
        // <param name="indentifier">An unique identified for the sound. You cannot override already existing ones.</param>
        // <param name="samplerate">The sample rate of the sound. Must be 11025, 22050 or 44100.</param>
        // <param name="length">The length in seconds of the sound to generate.</param>
        // <param name="callback">A function which will be called to generate every sample on the sound. This function gets the current sample number passed as the first argument. The return value must be between 0 and 65535.</param>
        public static void Generate(string indentifier, float samplerate, float length, function callback) {
        }
        
        // <realm>Shared</realm>
        // <summary>Returns properties of the soundscript.</summary>
        // <param name="name">The name of the sound script.</param>
        public static void GetProperties(string name) {
        }
        
        // <realm>Shared</realm>
        // <summary>Returns a list of all registered sound scripts.</summary>
        public static void GetTable() {
        }
        
        // <realm>Shared</realm>
        // <summary>Plays a sound from the specified position in the world.</summary>
        // <param name="Name">A string path to the sound.</param>
        // <param name="Pos">A vector describing where the sound should play.</param>
        // <param name="Level">Sound level in decibels. 75 is normal. Ranges from 20 to 180, where 180 is super loud. This affects how far away the sound will be heard.</param>
        // <param name="Pitch">An integer describing the sound pitch. Range is from 0 to 255. 100 is normal pitch.</param>
        // <param name="Volume">A float ranging from 0-1 describing the output volume of the sound.</param>
        public static void Play(string Name, Vector Pos, float Level, float Pitch, float Volume) {
        }
        
        // <realm>Client</realm>
        // <summary>Plays a file from GMod directory. You can find a list of all error codes [http://www.un4seen.com/doc/#bass/BASS_ErrorGetCode.html here]</summary>
        // <param name="path">The path to the file to play.</param>
        // <param name="flags">Flags for the sound. Can be one or more of following, separated by a space (" "):.</param>
        // <param name="callback">Callback function that is called as soon as the the stream is loaded. It has next arguments:<br/>.</param>
        public static void PlayFile(string path, string flags, function callback) {
        }
        
        // <realm>Client</realm>
        // <summary>Allows you to play external sound files, as well as online radio streams.</summary>
        // <param name="url">The URL of the sound to play.</param>
        // <param name="flags">Flags for the sound. Can be one or more of following, separated by a space (" "):.</param>
        // <param name="callback">Callback function that is called as soon as the the stream is loaded. It has next arguments:<br/>.</param>
        public static void PlayURL(string url, string flags, function callback) {
        }
    }
}
