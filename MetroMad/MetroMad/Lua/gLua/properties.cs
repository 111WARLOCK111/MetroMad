//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// /*  AutoGeneratedCode.cs - This class Is autogenerated.
//
//    Copyright (C) 2014  Ali Deym (https://github.com/111WARLOCK111/).
//
//    This program is free software; you can redistribute it and/or modify
//    it under the terms of the GNU General Public License as published by
//    the Free Software Foundation; either version 2 of the License, or
//    (at your option) any later version.
//
//    This program is distributed in the hope that it will be useful,
//    but WITHOUT ANY WARRANTY; without even the implied warranty of
//    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//    GNU General Public License for more details.
//
//    You should have received a copy of the GNU General Public License along
//    with this program; if not, write to the Free Software Foundation, Inc.,
//    51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
//*/
namespace MetroMad.Lua.gLua {
    using System;
    
    
    public class properties {
        
        // <realm>Shared</realm>
        // <summary>Add properties to the properties module</summary>
        // <param name="name">A unique name used to identify the property.</param>
        // <param name="propertyData">A table that defines the property.</param>
        public virtual void Add(string name, table propertyData) {
        }
        
        // <realm>Shared</realm>
        // <summary>Returns an entity player is hovering over with his cursor.</summary>
        // <param name="pos">Eye position of local player, {{ClassFunction|Entity|EyePos}}.</param>
        // <param name="aimVec">Aim vector of local player, {{ClassFunction|Player|GetAimVector}}.</param>
        // <return>Entity|The hovered entity</return>
        public virtual Entity GetHovered(Vector pos, Vector aimVec) {
            return new Entity();
        }
        
        // <realm>Shared</realm>
        // <summary>Checks if player hovers over any entities and open a properties menu for it.</summary>
        // <param name="eyepos">The eye pos of a player.</param>
        // <param name="eyevec">The aim vector of a player.</param>
        public virtual void OnScreenClick(Vector eyepos, Vector eyevec) {
        }
        
        // <realm>Shared</realm>
        // <summary>Opens properties menu for given entity.</summary>
        // <param name="ent">The entity to open menu for.</param>
        // <param name="tr">The trace that is passed as second argument to Action callback of a property.</param>
        public virtual void OpenEntityMenu(Entity ent, table tr) {
        }
    }
}
