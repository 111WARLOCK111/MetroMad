//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// /*  AutoGeneratedCode.cs - This class Is autogenerated.
//
//    Copyright (C) 2014  Ali Deym (https://github.com/111WARLOCK111/).
//
//    This program is free software; you can redistribute it and/or modify
//    it under the terms of the GNU General Public License as published by
//    the Free Software Foundation; either version 2 of the License, or
//    (at your option) any later version.
//
//    This program is distributed in the hope that it will be useful,
//    but WITHOUT ANY WARRANTY; without even the implied warranty of
//    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//    GNU General Public License for more details.
//
//    You should have received a copy of the GNU General Public License along
//    with this program; if not, write to the Free Software Foundation, Inc.,
//    51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
//*/
namespace MetroMad.Lua.gLua {
    using System;
    
    
    public class spawnmenu {
        
        // <realm>Client</realm>
        // <summary>Activates a tool, opens context menu and brings up the tool gun.</summary>
        // <param name="tool">Tool class/file name.</param>
        public virtual void ActivateTool(string tool) {
        }
        
        // <realm>Client</realm>
        // <summary>Activates tools context menu in specified tool tab.</summary>
        // <param name="tab">The tabID of the tab to open the context menu in.</param>
        // <param name="cp">The control panel to open.</param>
        public virtual void ActivateToolPanel(float tab, Panel cp) {
        }
        
        // <realm>Client</realm>
        // <summary>Returns currently opened control panel of a tool, post process effect or some other menu in spawnmenu.</summary>
        // <return>Panel|The currently opened control panel, if any.</return>
        public virtual Panel ActiveControlPanel() {
            return new Panel();
        }
        
        // <realm>Client</realm>
        public virtual void AddContentType() {
        }
        
        // <realm>Client</realm>
        // <summary>Inserts a new tab into the CreationMenus table, which will be used by the creation menu to generate its tabs (Spawnlists, Weapons, Entities, etc.)</summary>
        // <param name="strName">What text will appear on the tab (I.E Spawnlists).</param>
        // <param name="pFunction">The function called to generate the content of the tab.</param>
        // <param name="pMaterial">Path to the material that will be used as an icon on the tab.</param>
        // <param name="iOrder">The order in which this tab should be shown relative to the other tabs on the creation menu.</param>
        // <param name="strTooltip">The tooltip to be shown for this tab.</param>
        public virtual void AddCreationTab(string strName, function pFunction, string pMaterial, float iOrder, string strTooltip) {
        }
        
        // <realm>Client</realm>
        public virtual void AddPropCategory() {
        }
        
        // <realm>Client</realm>
        public virtual void AddToolCategory() {
        }
        
        // <realm>Client</realm>
        // <summary>Adds an option to the right side of the spawnmenu</summary>
        // <param name="tab">The tab to add into.</param>
        // <param name="category">The category to add into.</param>
        // <param name="class">Name of item to add, must be unique.</param>
        // <param name="name">The nice name of item.</param>
        // <param name="cmd">Command to execute when the item is selected.</param>
        // <param name="config">Config name ( Unknown purpose ).</param>
        // <param name="cpanel">A function to build the C panel.</param>
        public virtual void AddToolMenuOption(string tab, string category, string @class, string name, string cmd, string config, function cpanel) {
        }
        
        // <realm>Client</realm>
        // <summary>Used to create a new Utility tab inside of the spawnmenu to place more content into. You must call from from {{HookFunction|SANDBOX|AddToolMenuTabs}} for it to add work correctly.</summary>
        // <param name="tab">The name of the tab in creation.</param>
        // <param name="name">The 'Unique' tab name (Tip: {{LibraryFunction|language|Add}}).</param>
        // <param name="icon">(Optional) Directory to tab image.</param>
        public virtual void AddToolTab(string tab, string name, string icon) {
        }
        
        // <realm>Client</realm>
        public virtual void ClearToolMenus() {
        }
        
        // <realm>Client</realm>
        // <param name="type">The type of the content icon.</param>
        // <param name="parent">The parent to add the content icon to.</param>
        // <return>Panel|The created content icon</return>
        public virtual Panel CreateContentIcon(string type, Panel parent) {
            return new Panel();
        }
        
        // <realm>Client</realm>
        // <summary>{{Deprecated}}</summary>
        // <param name="spawnlists">A table containing spawnlists.</param>
        public virtual void DoSaveToTextFiles(table spawnlists) {
        }
        
        // <realm>Client</realm>
        public virtual void GetContentType() {
        }
        
        // <realm>Client</realm>
        // <summary>Gets the CreationMenus table, which was filled with creation menu tabs from {{LibraryFunction|spawnmenu|AddCreationTab}}.</summary>
        // <return>table|The CreationMenus table. See the {{Struct|CreationMenus}}.</return>
        public virtual table GetCreationTabs() {
            return new table();
        }
        
        // <realm>Client</realm>
        public virtual void GetPropTable() {
        }
        
        // <realm>Client</realm>
        public virtual void GetToolMenu() {
        }
        
        // <realm>Client</realm>
        // <summary>Gets a table of tools on the client.</summary>
        // <return>table|A table with groups of tools, along with information on each tool.</return>
        public virtual table GetTools() {
            return new table();
        }
        
        // <realm>Client</realm>
        // <summary>{{Deprecated}}</summary>
        public virtual void PopulateFromEngineTextFiles() {
        }
        
        // <realm>Client</realm>
        // <summary>Loads spawnlists from text files.</summary>
        public virtual void PopulateFromTextFiles() {
        }
        
        // <realm>Client</realm>
        // <summary>{{Internal}}</summary>
        // <param name="spawnlists">A table containing spawnlists.</param>
        public virtual void SaveToTextFiles(table spawnlists) {
        }
        
        // <realm>Client</realm>
        // <summary>Sets currently active control panel to be returned by {{LibraryFunction|spawnmenu|ActiveControlPanel}}.</summary>
        // <param name="pnl">The panel to set.</param>
        public virtual void SetActiveControlPanel(Panel pnl) {
        }
        
        // <realm>Client</realm>
        // <summary>{{Deprecated}}</summary>
        // <param name="id">The tab ID to open.</param>
        public virtual void SwitchToolTab(float id) {
        }
    }
}
