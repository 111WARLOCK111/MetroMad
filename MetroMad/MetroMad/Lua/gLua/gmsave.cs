//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// /*  AutoGeneratedCode.cs - This class Is autogenerated.
//
//    Copyright (C) 2014  Ali Deym (https://github.com/111WARLOCK111/).
//
//    This program is free software; you can redistribute it and/or modify
//    it under the terms of the GNU General Public License as published by
//    the Free Software Foundation; either version 2 of the License, or
//    (at your option) any later version.
//
//    This program is distributed in the hope that it will be useful,
//    but WITHOUT ANY WARRANTY; without even the implied warranty of
//    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//    GNU General Public License for more details.
//
//    You should have received a copy of the GNU General Public License along
//    with this program; if not, write to the Free Software Foundation, Inc.,
//    51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
//*/
namespace MetroMad.Lua.gLua {
    using System;
    
    
    public class gmsave {
        
        // <realm>Server</realm>
        // <summary>Loads a saved map.</summary>
        // <param name="mapData">The JSON encoded string containing all the map data.</param>
        // <param name="ply">The player to load positions for.</param>
        public virtual void LoadMap(string mapData, Player ply) {
        }
        
        // <realm>Server</realm>
        // <summary>Sets player position and angles from supplied table</summary>
        // <param name="ply">The player to "load" values for.</param>
        // <param name="data">A table containing Origin and Angle keys for position and angles to set.</param>
        public virtual void PlayerLoad(Player ply, table data) {
        }
        
        // <realm>Server</realm>
        // <summary>Returns a table containing player position and angles. Used by {{LibraryFunction|gmsave|SaveMap}}.</summary>
        // <param name="ply">The player to "save".</param>
        // <return>table|A table containing player position ( Origin ) and angles ( Angle )</return>
        public virtual table PlayerSave(Player ply) {
            return new table();
        }
        
        // <realm>Server</realm>
        // <summary>Saves the map</summary>
        // <param name="ply">The player, whose position should be saved for loading the save.</param>
        // <return>string|The encoded to JSON string containing save data</return>
        public virtual string SaveMap(Player ply) {
            return "String";
        }
        
        // <realm>Server</realm>
        // <summary>Returns if we should save this entity in a duplication or a map save or not.</summary>
        // <param name="ent">The entity.</param>
        // <param name="t">A table containing classname key with entities classname.</param>
        // <return>boolean|Should save entity or not</return>
        public virtual bool ShouldSaveEntity(Entity ent, table t) {
            return true;
        }
    }
}
