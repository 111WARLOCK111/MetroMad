//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// /*  AutoGeneratedCode.cs - This class Is autogenerated.
//
//    Copyright (C) 2014  Ali Deym (https://github.com/111WARLOCK111/).
//
//    This program is free software; you can redistribute it and/or modify
//    it under the terms of the GNU General Public License as published by
//    the Free Software Foundation; either version 2 of the License, or
//    (at your option) any later version.
//
//    This program is distributed in the hope that it will be useful,
//    but WITHOUT ANY WARRANTY; without even the implied warranty of
//    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//    GNU General Public License for more details.
//
//    You should have received a copy of the GNU General Public License along
//    with this program; if not, write to the Free Software Foundation, Inc.,
//    51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
//*/
namespace MetroMad.Lua.gLua {
    using System;
    
    
    public class notification {
        
        // <realm>Client</realm>
        // <summary>Adds a standard notification to your screen.</summary>
        // <param name="Text">The string to display.</param>
        // <param name="Type">Determines the method for displaying the notification. See the {{Enum|NOTIFY}}.</param>
        // <param name="Length">The number of seconds to display the notification for.</param>
        public virtual void AddLegacy(string Text, float Type, float Length) {
        }
        
        // <realm>Client</realm>
        // <summary>Adds a notification with an animated progress bar.</summary>
        // <param name="id">Can be any type. It's used as an index.</param>
        // <param name="strText">The text to show.</param>
        public virtual void AddProgress(any id, string strText) {
        }
        
        // <realm>Client</realm>
        // <summary>{{Deprecated|Function doesn't seem to be doing anything useful}}</summary>
        // <param name="uid">Notification unique ID.</param>
        // <param name="delay">Delay.</param>
        public virtual void Die(string uid, float delay) {
        }
        
        // <realm>Client</realm>
        // <summary>Removes the notification.</summary>
        // <param name="uid">The unique ID of the notification.</param>
        public virtual void Kill(string uid) {
        }
    }
}
